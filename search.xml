<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>重载</title>
      <link href="/2023/09/20/%E9%87%8D%E8%BD%BD/"/>
      <url>/2023/09/20/%E9%87%8D%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h1 id="方法的重载"><a href="#方法的重载" class="headerlink" title="方法的重载"></a>方法的重载</h1><ol><li><p>定义:<br>指在一个类中定义多个同名的方法，但要求每个方法具有不同的参数的类型或参数的个数。调用重载方法时，方法重载通常用于创建完成一组任务相似但参数的类型或参数的个数或参数的顺序不同的方法，Java的方法重载，就是在类中可以创建多个方法，它们可以有相同的名字，但必须具有不同的参数，即或者是参数的个数不同，或者是参数的类型不同。调用方法时通过传递给它们的不同个数和类型的参数，以及传入参数的顺序来决定具体使用哪个方法。</p></li><li><p>总结:两同一不同</p></li></ol><ul><li>两同:同一个类,相同的方法名</li><li>一不同:参数列表不同:1 参数个数不同,2 参数类型不同<br>注意:方法的重载与形参的名,权限修饰符,返回值类型都没有关系</li></ul><h1 id="可变个数形参的方法"><a href="#可变个数形参的方法" class="headerlink" title="可变个数形参的方法"></a>可变个数形参的方法</h1><ol><li><p>使用场景:在调用方法时,可能会出现方法形参的类型是确定的,但是参数的个数不确定,此时,我们就可以使用可变个数形参的方法</p></li><li><p>格式:(参数类型 …参数名)</p></li><li><p>说明：</p></li></ol><ul><li>在被调用时,可变个数的可以为:0个,1个或多个</li><li>可变个数的方法与同一个类中,同名的多个方法之前可以构成重载</li><li>特例:可变个数的形参的方法与同一个类中方法名相同,且与可变个数形参的类型相同的数组参数不构成重载</li><li>可变个数的形参必须声明在形参列表的最后</li><li>可变个数的形参最多在一个方法的形参列表中出现一次</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>流程控制语句</title>
      <link href="/2023/09/19/%E6%96%B9%E6%B3%95/"/>
      <url>/2023/09/19/%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><ul><li><strong>方法</strong>是类或对象行为特征的抽象,用来完成某个功能操作,在某些语言中称为<strong>函数</strong>或者<strong>过程</strong></li><li>将功能封装为方法的目的是,可以实现<strong>代码重用,减少冗余,简化代码</strong></li><li>java里的方法不能独立存在,所有的方法必须定义在类里</li></ul><hr><h1 id="方法的声明"><a href="#方法的声明" class="headerlink" title="方法的声明"></a>方法的声明</h1><p>权限修饰符 [其他修饰符] 返回值类型 方法名(形参列表) [throws 异常类型]<br>{<br>&#x2F;&#x2F;方法头<br>&#x2F;&#x2F;方法体<br>}<br>注意:[]中的内部不是必须的</p><h1 id="返回值类型"><a href="#返回值类型" class="headerlink" title="返回值类型"></a>返回值类型</h1><p>含义:描述当调用玩此方法时,是否需要返回一个结果</p><p>分类:</p><ol><li>无返回值类型,使用void表示即可</li><li>有具体的返回值类型,需要指明返回的数据的类型,可以是基本数据类型,可以是引用数据类型</li></ol><ul><li>需要在方法内部配合使用:”return + 返回值类型的变量或者常量”</li></ul><ol start="3"><li>内存解析<br><img src="/images/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%A7%A3%E6%9E%904.PNG" alt="Alt text"></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>局部变量和成员变量</title>
      <link href="/2023/09/14/%E6%88%90%E5%91%98%E5%92%8C%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F/"/>
      <url>/2023/09/14/%E6%88%90%E5%91%98%E5%92%8C%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="类"><a href="#类" class="headerlink" title="类"></a>类</h1><ol><li>变量的分类</li></ol><ul><li>角度一:按照数据类型来分:基本数据类型(8种),引用数据类型(数组、类、接口、枚举、注解、记录)</li><li>角度二:按照变量在类中声明的位置不同,成员变量(或属性)、局部变量( 方法内、方法形参、构造器内、)</li></ul><ol start="2"><li><p>属性的几个称谓:成员变量、属性、field(字段、域)</p></li><li><p>区分  成员变量 vs 局部变量<br>相同点:</p></li></ol><ul><li>变量格式声明相同</li><li>变量都有其有效的作用域,出了作用域就失效了</li><li>变量必须先声明后赋值在使用</li></ul><p>不同点:</p><ol><li>类中声明的位置不同</li></ol><ul><li>属性:声明在类内,方法外的变量</li><li>局部变量:声明方法、构造器内部的变量</li></ul><ol start="2"><li>在内存中分配的位置不同</li></ol><ul><li>属性:随着对象的创建,存储在堆空间中</li><li>局部变量:存储在栈空间中</li></ul><ol start="3"><li>声明周期</li></ol><ul><li>属性:随着对象的创建而创建,随着对象的消亡而消亡</li><li>局部变量:s<br>  随着方法对应的栈帧入栈,局部变量会在栈中分配,随着方法对应的栈帧出栈,局部变量消亡</li></ul><ol start="4"><li>作用域</li></ol><ul><li>属性:在整个类的内部都是有效的</li><li>局部变量:仅限于声明此局部变量所在的方法(构造器,代码块)中</li></ul><ol start="5"><li>是否可以有权限修饰符进行修饰</li></ol><ul><li>public,protected,缺省,private(用于表明所修饰的结构可调用的范围的大小)</li><li>属性:是可以使用权限修饰符进行修饰的</li><li>局部变量(方法):不可以使用任何权限修饰符进行修饰的</li></ul><ol start="6"><li>是否有默认值</li></ol><ul><li>属性:都有默认初始化值<br>  意味着,如果没有给属性进行显示初始化赋值,则会有默认初始化值</li><li>局部变量:都没有默认初始化值<br>  意味着,在使用局部变量之前,必须要显示的赋值,否则报错<br>  注意:对于方法的形参而言,在调用方法时,给此形参赋值</li></ul><h2 id="实参给形参赋值的过程"><a href="#实参给形参赋值的过程" class="headerlink" title="实参给形参赋值的过程"></a>实参给形参赋值的过程</h2><blockquote><p>如果形参是基本数据类型的变量,则将实参保存的数据值赋给形参<br>如果形参是引用数据类型的变量,则将实参保存的地址值赋给形参</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>面向对象</title>
      <link href="/2023/09/14/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
      <url>/2023/09/14/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<ul><li>java类及类的成员:(重点)属性,方法,构造器,(熟悉)代码块,内部类</li><li>面向对象的特征:封装、继承、多态、(抽象)</li><li>其他关键字的使用:this、super、package、import、static、final、interface、abstract</li></ul><h1 id="面向对象编程概述"><a href="#面向对象编程概述" class="headerlink" title="面向对象编程概述"></a>面向对象编程概述</h1><p>有指令式编程和函数式编程,主要包括面向过程和面向对象</p><h2 id="java基本元素-类和对象"><a href="#java基本元素-类和对象" class="headerlink" title="java基本元素:类和对象"></a>java基本元素:类和对象</h2><p><strong>类</strong>(Class)和<strong>对象</strong>(Object)是面向对象的核心概念</p><p>类</p><ul><li><p>具有相同特征的事物的抽象描述,是<strong>抽象</strong>的,概念上的定义<br>对象</p></li><li><p>实际存在的该类事物的<strong>每个个体</strong>,是<strong>具体的</strong>,因此称为实例 </p></li><li><p><img src="/images/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.PNG" alt="Alt text"></p></li></ul><p>类的实例化</p><ul><li>等价描述:类的实例化&lt;&#x3D;&#x3D;&gt;创建类的对象</li><li>格式:类的类型 对象名 &#x3D; 通过new创建的对象实体</li><li>举例:<br>Phone p1 &#x3D; new Phone();<br>Scanner scan &#x3D; new Scanner(System.in);</li></ul><p>面向对象完成具体共鞥的操作的三步流程(非常重要)</p><ul><li>创建类，并设计类的内部成员(属性、方法)</li><li>创建类的对象,比如:Phone p1 &#x3D; new Phone();</li><li>通过对象,调用其内部声明的属性或方法,完成相关功能</li></ul><p>对象在内存中的分配涉及到的内存结构</p><ul><li>栈:方法内定义的变量,存储在栈中</li><li>堆:new 出来的结构(比如:数组实体、对象的实体),包括对象中的属性</li><li>方法区:存放类的模板,比如:Person类的模版</li></ul><p>栈堆内存图解析:</p><ul><li><img src="/images/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%A7%A3%E6%9E%901.PNG" alt="Alt text"></li><li><img src="/images/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%A7%A3%E6%9E%902.PNG" alt="Alt text"></li><li><img src="/images/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%A7%A3%E6%9E%903.PNG" alt="Alt text"></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>arrays类</title>
      <link href="/2023/09/13/Arrays%E7%B1%BB/"/>
      <url>/2023/09/13/Arrays%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="Arrays"><a href="#Arrays" class="headerlink" title="Arrays"></a>Arrays</h1><p>处在Java.util包下</p><p>作用:java.util.Arrays类即为操作数组的工具类,包含了用来操作数组(比如排序和搜索)的各种方法</p><hr><p>Arrays的常用方法   </p><p>1. </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(<span class="type">int</span>[] a,<span class="type">int</span>[] b)</span>:比较两个数组的元素是否依次相等</span><br><span class="line">例:<span class="type">boolean</span> isEquals=Arrays.equals(arr1,arr2);</span><br></pre></td></tr></table></figure><p>2. </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String <span class="title function_">toString</span><span class="params">(<span class="type">int</span>[] a)</span>:输出数组元素信息</span><br><span class="line">例:System.out.println(Arrays.toString(arr1))</span><br></pre></td></tr></table></figure><p>3. </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">fill</span><span class="params">(<span class="type">int</span>[] a,<span class="type">int</span>[] val)</span>:将指定值填充到数组之中</span><br><span class="line">例:System.out.println(Array.fill(arr1,<span class="number">10</span>));</span><br><span class="line">这条代码意思是调用fill方法,将arr1数组所有的值改为<span class="number">10</span></span><br></pre></td></tr></table></figure><p>4. </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">sort</span><span class="params">(<span class="type">int</span>[] a)</span>:使用快速排序算法实现的升序排序</span><br><span class="line">例:System.out.println(Arrays.sort(arr3))</span><br><span class="line">例:实现降序的sort方法时,不能使用<span class="type">int</span>类型了,要用integer,<span class="type">float</span>要使用Float,不能使用基本类型,</span><br><span class="line">Arrays.sort(arr3,Collections.reverseOrder())</span><br></pre></td></tr></table></figure><p>5. </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">binarySearch</span><span class="params">(<span class="type">int</span>[] a,<span class="type">int</span> key)</span>:二分查找</span><br><span class="line"><span class="comment">//使用前提,当前数组是有序的,当找到了显示索引值,没找到显示负数</span></span><br><span class="line">例:<span class="type">int</span> index=Arrays.binarySearch(arr3,<span class="number">5</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>顺序查找和二分查找</title>
      <link href="/2023/09/13/%E9%A1%BA%E5%BA%8F%E6%9F%A5%E6%89%BE%E5%92%8C%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%B3%95/"/>
      <url>/2023/09/13/%E9%A1%BA%E5%BA%8F%E6%9F%A5%E6%89%BE%E5%92%8C%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="顺序查找"><a href="#顺序查找" class="headerlink" title="顺序查找"></a>顺序查找</h1><ul><li>优点：算法简单</li><li>缺点:执行效率低,执行的时间复杂度O(N)<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Linear_Search</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr1 = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">34</span>, <span class="number">54</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">65</span>, <span class="number">7</span>, <span class="number">34</span>, <span class="number">5</span>, <span class="number">76</span>, <span class="number">34</span>, <span class="number">67</span>&#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">50</span>;</span><br><span class="line">        <span class="comment">//方式一</span></span><br><span class="line"><span class="comment">//        boolean flag=true;</span></span><br><span class="line"><span class="comment">//        for (int i = 0; i &lt; arr1.length; i++) &#123;</span></span><br><span class="line"><span class="comment">//           if (x==arr1[i])&#123;</span></span><br><span class="line"><span class="comment">//               System.out.println(&quot;索引&quot;+x+&quot;已经找到,位置为&quot;+i);</span></span><br><span class="line"><span class="comment">//               flag = false;</span></span><br><span class="line"><span class="comment">//               break;</span></span><br><span class="line"><span class="comment">//           &#125;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        if (flag) System.out.println(&quot;没有找到此元素&quot;);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//方式二</span></span><br><span class="line">        <span class="type">int</span> i;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; arr1.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (x == arr1[i]) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;索引&quot;</span> + x + <span class="string">&quot;已经找到,位置为&quot;</span> + i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i == arr1.length) System.out.println(<span class="string">&quot;没有找到此元素&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h1 id="二分法查找"><a href="#二分法查找" class="headerlink" title="二分法查找"></a>二分法查找</h1><ul><li>优点:执行效率高,执行的时间复杂度O(logN)</li><li>缺点:算法相较于顺序查找难一点,数组必须有序<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Binary_Search</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr2 = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">12</span>,<span class="number">15</span>,<span class="number">19</span>,<span class="number">26</span>,<span class="number">37</span>,<span class="number">49</span>,<span class="number">51</span>,<span class="number">66</span>,<span class="number">89</span>,<span class="number">100</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> target=<span class="number">5</span>;<span class="comment">//要查找的元素</span></span><br><span class="line"><span class="comment">//        target=17;</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> head=<span class="number">0</span>;<span class="comment">//首值</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">end</span> <span class="operator">=</span> arr2.length;</span><br><span class="line">        <span class="keyword">while</span> (head &lt;= end)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> (head+end) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(arr2[mid] == target)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;元素&quot;</span> + target + <span class="string">&quot;找到了,索引位置在&quot;</span> + mid);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (target &lt; arr2[mid] )</span><br><span class="line">            &#123;</span><br><span class="line">                end = mid-<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (target &gt; arr2[mid])</span><br><span class="line">            &#123;</span><br><span class="line">                head = mid+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (head&gt; end) System.out.println(<span class="string">&quot;没有找到此元素&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>二维数组</title>
      <link href="/2023/09/11/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/"/>
      <url>/2023/09/11/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h1><ul><li>对于二维数组的理解,可以看成是一维数组array1又作为另一个一位数组array2的元素而存在</li><li>其实,从数组底层的运行机制来看,其实没有多维数组</li><li>概念:数组的外层元素,数组的内层元素</li><li>外层元素:默认存储地址值</li><li>内层:默认与一维数组元素的不同类型的默认值规定相同</li></ul><hr><h1 id="二维数组的使用"><a href="#二维数组的使用" class="headerlink" title="二维数组的使用"></a>二维数组的使用</h1><ul><li>数组的声明和初始化</li><li>调用数组的指定元素</li><li>数组的属性:length,表示数组的长度</li><li>数组的遍历</li><li>数组元素的默认初始化值</li><li>二维数组的内存解析</li></ul><p>方式1:静态初始化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> [][] arr1 = <span class="keyword">new</span> <span class="title class_">int</span>[][]&#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>&#125;,&#123;<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>&#125;&#125;;</span><br></pre></td></tr></table></figure><p>方式2:动态初始化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String[][] arr2 =<span class="keyword">new</span> <span class="title class_">String</span>[<span class="number">3</span>][<span class="number">4</span>];</span><br></pre></td></tr></table></figure><p>方式3:动态初始化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span>[][] arr3 =<span class="keyword">new</span> <span class="title class_">double</span>[<span class="number">2</span>][];</span><br></pre></td></tr></table></figure><p>举例:具体二维数组的代码的内存解析</p><ul><li><img src="/images/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E5%86%85%E5%AD%98%E8%A7%A3%E6%9E%90.PNG" alt="Alt text"></li><li><img src="/images/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E5%86%85%E5%AD%98%E8%A7%A3%E6%9E%901.PNG" alt="Alt text"></li><li><img src="/images/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%841.PNG" alt="Alt text"></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数组</title>
      <link href="/2023/09/11/%E6%95%B0%E7%BB%84/"/>
      <url>/2023/09/11/%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="一维数组的概念"><a href="#一维数组的概念" class="headerlink" title="一维数组的概念"></a>一维数组的概念</h1><p>数组(Array),是多个相同类型数据按一定顺序排列的集合,并使用一个名字命名,并通过编号的方式对这些数据进行统一管理<br>数组中的概念</p><ul><li>数组名</li><li>下标(或索引)</li><li>元素</li><li>数组的长度</li></ul><h1 id="数组的特点"><a href="#数组的特点" class="headerlink" title="数组的特点"></a>数组的特点</h1><ul><li>数组本身是<strong>引用数据类型</strong>,而数组中的元素可以是<strong>任何数据类型</strong>,包括基本数据类型和引用数据类型</li><li>创建数组对象会在内存中开辟一整块<strong>连续的空间</strong>,占据的空间的大小,取决于数组的长度和数组中元素的类型</li><li>数组中的元素在内存中是依次紧密排列的,有序的</li><li>数组,一旦初始化完成,其长度就是确定的,数组的<strong>长度一旦确定,就不能修改</strong></li><li>我们可以直接通过下标(或索引)的方式调用指定位置的元素,速度很快</li><li>数组名引用的是这块连续空间的首地址</li></ul><p>数组的声明和初始化</p><ul><li>数据类型 变量名 &#x3D; 变量值</li></ul><p>方法一</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span>[] prices;</span><br><span class="line">      prices=<span class="keyword">new</span> <span class="title class_">double</span>[]&#123;<span class="number">20.32</span>,<span class="number">43.21</span>,<span class="number">43.22</span>&#125;;</span><br></pre></td></tr></table></figure><p>方式二</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String[] foods=<span class="keyword">new</span> <span class="title class_">String</span>[<span class="number">4</span>];</span><br></pre></td></tr></table></figure><p>举例:具体一维数组的代码的内存解析</p><ul><li><img src="/images/%E6%95%B0%E7%BB%84%E5%86%85%E5%AD%98%E8%A7%A3%E6%9E%90.PNG" alt="Alt text"></li><li><img src="/images/%E6%95%B0%E7%BB%84%E5%86%85%E5%AD%98%E8%A7%A3%E6%9E%901.PNG" alt="Alt text"></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>谷粒记账系统</title>
      <link href="/2023/09/09/%E8%B0%B7%E7%B2%92%E8%AE%B0%E8%B4%A6%E7%B3%BB%E7%BB%9F/"/>
      <url>/2023/09/09/%E8%B0%B7%E7%B2%92%E8%AE%B0%E8%B4%A6%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="谷粒记账系统"><a href="#谷粒记账系统" class="headerlink" title="谷粒记账系统"></a>谷粒记账系统</h1><ul><li>模拟实现基于文本界面的《谷粒记账软件》</li><li>该软件能够记录家庭的收入,支出,并能够打印收支明细表</li><li>项目采用分级菜单方式,主菜单如下</li></ul><hr><pre><code>        谷粒记账软件                     1.收支明细        2.登记收入        3.登记支出        4.退出        请选择(1-4):</code></pre><p>需求说明:</p><ul><li>假设家庭起始的生活基本金为10000元</li><li>每次登记收入(菜单2)后,收入的金额应累加到基本金上,并记录本次收入明细,以便后续的查询</li><li>每次等级支出(菜单3)后,支出的金额应从基本金扣除,并记录本次支出明细,以便后续的查询</li><li>查询收支明细(菜单1)时,将显示所有的收入,支出明细列表</li></ul><p>主方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javaSE_chapter1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GuLiAccount</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isFlag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">balance</span> <span class="operator">=</span> <span class="number">10000</span>;<span class="comment">//初始金额</span></span><br><span class="line">        String info=<span class="string">&quot;&quot;</span>;<span class="comment">//记录收支的信息</span></span><br><span class="line">        <span class="comment">//记录收支的信息StringBuilder info= new StringBuilder();</span></span><br><span class="line">        <span class="keyword">while</span> (isFlag)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;-------------谷粒记账软件-------------&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;              1.收支明细             &quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;              2.登记收入             &quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;              3.登记支出             &quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;              4.退   出             &quot;</span>);</span><br><span class="line">        System.out.print(<span class="string">&quot;              请选择(1-4):&quot;</span>);</span><br><span class="line">        <span class="type">char</span> selection=Utility.readMenuSelection();<span class="comment">//获取用户选择:&#x27;1&#x27;,&#x27;2&#x27;,&#x27;3,&#x27;,&#x27;4&#x27;</span></span><br><span class="line">        <span class="keyword">switch</span> (selection)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;------------当前收支明细记录------------&quot;</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;收支\t\t账户金额\t\t收支金额\t\t说   明&quot;</span>);</span><br><span class="line">                System.out.println(info);</span><br><span class="line">                System.out.println(<span class="string">&quot;------------------------------------------&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">                System.out.print(<span class="string">&quot;本次收入金额: &quot;</span>);</span><br><span class="line">                <span class="type">int</span> money=Utility.readNumber();</span><br><span class="line">                <span class="keyword">if</span> (money&gt;<span class="number">0</span>)balance+=money;</span><br><span class="line">                System.out.print(<span class="string">&quot;请输入收入说明: &quot;</span>);</span><br><span class="line">                String addDesc=Utility.readString();</span><br><span class="line">                <span class="comment">//info.append(&quot;收入\t&quot;).append(balance).append(&#x27;\t&#x27;).append(&#x27;\t&#x27;).append(money).append(&#x27;\t&#x27;).append(&#x27;\t&#x27;).append(addDesc).append(&#x27;\n&#x27;);</span></span><br><span class="line">                <span class="comment">//记录收支的信息</span></span><br><span class="line">                info +=<span class="string">&quot;收入\t\t&quot;</span>+balance+ <span class="string">&quot;\t\t&quot;</span> +money+<span class="string">&quot;\t\t\t&quot;</span>+addDesc+<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">                System.out.println(<span class="string">&quot;-------------------登记完成-------------------&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">                System.out.print(<span class="string">&quot;本次消费金额: &quot;</span>);</span><br><span class="line">                <span class="type">int</span> money1=Utility.readNumber();</span><br><span class="line">                <span class="keyword">if</span> (money1&gt;<span class="number">0</span> &amp;&amp; money1&lt;=balance)</span><br><span class="line">                    balance-=money1;</span><br><span class="line">                System.out.print(<span class="string">&quot;请输入消费说明:&quot;</span>);</span><br><span class="line">                String addDesc1=Utility.readString();</span><br><span class="line">                <span class="comment">//info.append(&quot;消费\t&quot;).append(balance).append(&quot;\t&quot;).append(&#x27;\t&#x27;).append(money1).append(&quot;\t&quot;).append(&#x27;\t&#x27;).append(addDesc1).append(&quot;\n&quot;);</span></span><br><span class="line">                <span class="comment">//记录收支的信息</span></span><br><span class="line">                info +=<span class="string">&quot;消费\t\t&quot;</span>+balance+ <span class="string">&quot;\t\t&quot;</span> +money1+<span class="string">&quot;\t\t\t&quot;</span>+addDesc1+<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">                System.out.println(<span class="string">&quot;-------------------登记完成-------------------&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;\n确认是否退出(Y/N):&quot;</span>);</span><br><span class="line">                <span class="type">char</span> <span class="variable">isExit</span> <span class="operator">=</span> Utility.readConfirmSelection();</span><br><span class="line">                <span class="keyword">if</span> (isExit == <span class="string">&#x27;Y&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    isFlag= <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>调用方法实例:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javaSE_chapter1;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> Utility工具类：</span></span><br><span class="line"><span class="comment"> 将不同的功能封装为方法，就是可以直接通过调用方法使用它的功能，而无需考虑具体的功能实现细节。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Utility</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     用于界面菜单的选择。该方法读取键盘，如果用户键入’1’-’4’中的任意字符，则方法返回。返回值为用户键入字符。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">char</span> <span class="title function_">readMenuSelection</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">char</span> c;</span><br><span class="line">        <span class="keyword">for</span> (; ; ) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> readKeyBoard(<span class="number">1</span>);</span><br><span class="line">            c = str.charAt(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (c != <span class="string">&#x27;1&#x27;</span> &amp;&amp; c != <span class="string">&#x27;2&#x27;</span> &amp;&amp; c != <span class="string">&#x27;3&#x27;</span> &amp;&amp; c != <span class="string">&#x27;4&#x27;</span>) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;选择错误，请重新输入：&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     用于收入和支出金额的输入。该方法从键盘读取一个不超过4位长度的整数，并将其作为方法的返回值。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">readNumber</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        <span class="keyword">for</span> (; ; ) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> readKeyBoard(<span class="number">5</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                n = Integer.parseInt(str);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (NumberFormatException e) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;数字输入错误，请重新输入：&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     用于收入和支出说明的输入。该方法从键盘读取一个不超过8位长度的字符串，并将其作为方法的返回值。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">readString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> readKeyBoard(<span class="number">8</span>);</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     用于确认选择的输入。该方法从键盘读取‘Y’或’N’，并将其作为方法的返回值。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">char</span> <span class="title function_">readConfirmSelection</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">char</span> c;</span><br><span class="line">        <span class="keyword">for</span> (; ; ) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> readKeyBoard(<span class="number">1</span>).toUpperCase();</span><br><span class="line">            c = str.charAt(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="string">&#x27;Y&#x27;</span> || c == <span class="string">&#x27;N&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;选择错误，请重新输入：&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">readKeyBoard</span><span class="params">(<span class="type">int</span> limit)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (scanner.hasNext()) &#123;</span><br><span class="line">            line = scanner.nextLine();</span><br><span class="line">            <span class="keyword">if</span> (line.length() &lt; <span class="number">1</span> || line.length() &gt; limit) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;输入长度（不大于&quot;</span> + limit + <span class="string">&quot;）错误，请重新输入：&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> line;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行结果:<br><img src="/images/%E8%B0%B7%E7%B2%92.PNG" alt="Alt text"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>For循环</title>
      <link href="/2023/09/08/for%E5%BE%AA%E7%8E%AF/"/>
      <url>/2023/09/08/for%E5%BE%AA%E7%8E%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="For循环"><a href="#For循环" class="headerlink" title="For循环"></a>For循环</h1><ol><li>Java中规范了3中循环结构:for,while,do-while</li><li>凡是循环结构,就一定会有4个要素</li></ol><ul><li>1.初始化条件</li><li>2.循环条件—&gt;一定是boolean类型的变量或表达</li><li>3.循环体</li><li>4.迭代部分(更新部分)</li></ul><ol start="3"><li>for循环的格式<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="number">1</span>;<span class="number">2</span>;<span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="number">3</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>案例一:<strong>水仙花数</strong><br>解析:输出所有的水仙花数,所谓水仙花数是指一个3位数,其各个位上数字立方和等于其本身<br>例如: 153&#x3D;1^1^1+3^3^3+5^5^5</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javaSE_chapter1;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Narcissistic_Number</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">100</span>;i&lt;<span class="number">1000</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="type">int</span> bai=i/<span class="number">100</span>;</span><br><span class="line">        <span class="type">int</span> shi=i/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> ge=i%<span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> sum=bai*bai*bai+shi*shi*shi+ge*ge*ge;</span><br><span class="line">        <span class="keyword">if</span>(i==sum)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>案例二:<strong>最大公约数和最小公倍数</strong><br>解析:案例:输入两个正整数m和n,求其最大公约数和最小公倍数<br>比如:12和20的最大公约数是4,最小公倍数是60</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javaSE_chapter1;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Greatest_Common_Divisor</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> m=<span class="number">18</span>;</span><br><span class="line">        <span class="type">int</span> n=<span class="number">24</span>;</span><br><span class="line">        <span class="type">int</span> min= (m &lt; n)?m :n;</span><br><span class="line">        <span class="type">int</span> max=(m &gt; n)?m : n;</span><br><span class="line">        <span class="comment">//最大公约数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=min;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (m%i==<span class="number">0</span>&amp;&amp;n%i==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(i);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//最小公倍数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=max;i&lt;=m*n;i++</span><br><span class="line">        )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i%m==<span class="number">0</span>&amp;&amp;i%n==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(i);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>案例三:<strong>猜数游戏</strong><br>随机生成一个100以内的数,猜这个随机数是多少?<br>解析:从键盘输入数,如果大了,提示大了,如果小了,提示小了,如果对了,就不再猜了,并统计一共猜了多少次</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javaSE_chapter1;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Guess_Game</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> random=(<span class="type">int</span>)(Math.random()*<span class="number">101</span>)+<span class="number">1</span>;</span><br><span class="line">        Scanner scanner=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(random);</span><br><span class="line">        System.out.print(<span class="string">&quot;请输入你要猜的整数:&quot;</span>);</span><br><span class="line">        <span class="type">int</span> guess=scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (guess!=random)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (guess&gt;random)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;猜大了&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> System.out.println(<span class="string">&quot;猜小了&quot;</span>);</span><br><span class="line">            System.out.print(<span class="string">&quot;请输入你要猜的整数:&quot;</span>);</span><br><span class="line">            guess=scanner.nextInt();</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;恭喜你猜对了,你一共猜了&quot;</span>+sum+<span class="string">&quot;次&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>案例四:<br>世界最高山峰是珠穆朗玛峰,它的高度是8848.86米,假如我有一张足够大的纸,它的厚度是0.1毫米,<br>请问,我折叠多少次,可以折成珠穆朗玛峰的高度</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javaSE_chapter1;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Paper_Folding</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span> paper=<span class="number">0.1</span>;<span class="comment">//单位：毫米</span></span><br><span class="line">        <span class="type">double</span> zf=<span class="number">8848860</span>;<span class="comment">//单位：毫米</span></span><br><span class="line">        <span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (paper&lt;=zf)</span><br><span class="line">        &#123;</span><br><span class="line">            paper*=<span class="number">2</span>;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;一共折叠了&quot;</span>+count+<span class="string">&quot;次&quot;</span>+<span class="string">&quot;当前纸的高度为&quot;</span>+ (paper/<span class="number">1000</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>案例五:题目:模拟ATM取款</p><p>声明变量balance并初始化为0,用以表示银行账户的余额,下面通过ATM机程序实现存款,取款等功能<br>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;ATM&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br>       1.存款<br>       2.取款<br>       3.显示余额<br>       4.退出<br>请选择(1-4):</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javaSE_chapter1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ATM</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span> balance=<span class="number">0.0</span>;</span><br><span class="line">        Scanner scan=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span><span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;===========ATM===============&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;       1.存款         &quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;       2.取款         &quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;       3.显示余额      &quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;       4.退出         &quot;</span>);</span><br><span class="line">            System.out.print(<span class="string">&quot;请选择(1-4):&quot;</span>);</span><br><span class="line">            <span class="type">int</span> number=scan.nextInt();</span><br><span class="line">            <span class="keyword">switch</span> (number)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    System.out.print(<span class="string">&quot;请输入你要存的金额:&quot;</span>);</span><br><span class="line">                    <span class="type">double</span> money1=scan.nextDouble();</span><br><span class="line">                    <span class="keyword">if</span> (money1&gt;<span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        balance+=money1;</span><br><span class="line">                    &#125;</span><br><span class="line">                    System.out.println(<span class="string">&quot;------存款成功------&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    System.out.print(<span class="string">&quot;请输入你要取的金额:&quot;</span>);</span><br><span class="line">                    <span class="type">double</span> money2=scan.nextDouble();</span><br><span class="line">                    <span class="keyword">if</span> (money2&gt;<span class="number">0</span> &amp;&amp; balance&gt;=money2)</span><br><span class="line">                    &#123;</span><br><span class="line">                        balance-=money2;</span><br><span class="line">                    &#125;</span><br><span class="line">                    System.out.println(<span class="string">&quot;------取款成功------&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                    System.out.println(<span class="string">&quot;你的余额为&quot;</span>+balance);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                    flag=<span class="literal">false</span>;</span><br><span class="line">                    System.out.println(<span class="string">&quot;感谢使用,欢迎下次光临&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    System.out.println(<span class="string">&quot;------输入错误,请重新输入------&quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">while</span>(flag);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>For循环嵌套的使用</title>
      <link href="/2023/09/08/for%E5%B5%8C%E5%A5%97%E5%BE%AA%E7%8E%AF/"/>
      <url>/2023/09/08/for%E5%B5%8C%E5%A5%97%E5%BE%AA%E7%8E%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="循环嵌套的使用"><a href="#循环嵌套的使用" class="headerlink" title="循环嵌套的使用"></a>循环嵌套的使用</h1><ol><li><p>嵌套循环:是指一个循环结构A的循环体是另一个循环结构B</p><ul><li>外层循环:循环结构A</li><li>内层循环:循环结构B</li></ul></li><li><p>说明:</p><ul><li>内层循环充当了外层循环的循环体</li><li>对于两层嵌套循环来说,外层循环控制行数,内层循坏控制列数</li><li>举例:外层循环执行m次,内层循环执行n次,则内层循环的循环体共执行 m * n次</li></ul></li></ol><ul><li><p>案例一 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出运行结果:</span></span><br><span class="line"><span class="comment">******</span></span><br><span class="line"><span class="comment">******</span></span><br><span class="line"><span class="comment">******</span></span><br><span class="line"><span class="comment">******</span></span><br><span class="line"><span class="comment">******</span></span><br><span class="line"><span class="comment">******</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> javaSE_chapter1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">liu</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">6</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (j%<span class="number">6</span>==<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                System.out.println();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>案例二:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">运行结果:</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">**</span></span><br><span class="line"><span class="comment">***</span></span><br><span class="line"><span class="comment">****</span></span><br><span class="line"><span class="comment">*****</span></span><br><span class="line"><span class="comment">******</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> javaSE_chapter1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">liu</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">6</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">1</span>;j&lt;=i;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>案例三:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">运行结果:</span></span><br><span class="line"><span class="comment">******</span></span><br><span class="line"><span class="comment">*****</span></span><br><span class="line"><span class="comment">****</span></span><br><span class="line"><span class="comment">***</span></span><br><span class="line"><span class="comment">**</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> javaSE_chapter1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">liu</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">6</span>;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=i;j&gt;=<span class="number">1</span>;j--)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>案例四:<br>编写出一个以星号的菱形</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">运行结果:</span></span><br><span class="line"><span class="comment">        *</span></span><br><span class="line"><span class="comment">      * * *</span></span><br><span class="line"><span class="comment">    * * * * *</span></span><br><span class="line"><span class="comment">  * * * * * * *</span></span><br><span class="line"><span class="comment">* * * * * * * * *</span></span><br><span class="line"><span class="comment">  * * * * * * *</span></span><br><span class="line"><span class="comment">    * * * * *</span></span><br><span class="line"><span class="comment">      * * *</span></span><br><span class="line"><span class="comment">        *</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> javaSE_chapter1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">liu</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i&lt;=<span class="number">5</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">10</span>-<span class="number">2</span>*i;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k=<span class="number">1</span>;k&lt;=<span class="number">2</span>*i-<span class="number">1</span>;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;* &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">2</span>*i;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k=<span class="number">1</span>;k&lt;=<span class="number">9</span>-<span class="number">2</span>*i;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;* &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>案例五:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">打印一个九九乘法表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> javaSE_chapter1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Multiplication_Table</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">         <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">1</span>;j&lt;=i;j++)</span><br><span class="line">         &#123;</span><br><span class="line">             System.out.print( j + <span class="string">&quot; * &quot;</span> + i + <span class="string">&quot; = &quot;</span> + i * j +<span class="string">&#x27;\t&#x27;</span>);</span><br><span class="line">         &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>案例六:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">题目:找出100以内所有的素数(质数)? 100000以内呢</span></span><br><span class="line"><span class="comment">质数:只能被1和它本身整除的自然数,比如2,3,5,7,11,13.....</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> javaSE_chapter1;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Prime_Number</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">     <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">100</span>;i++)</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="comment">//bolean flag=true;</span></span><br><span class="line">         <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">2</span>;j&lt;i;j++)</span><br><span class="line">         &#123;</span><br><span class="line">             <span class="keyword">if</span> (i%j==<span class="number">0</span>)</span><br><span class="line">             &#123;</span><br><span class="line">                flag=<span class="literal">false</span>;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">if</span> (flag) System.out.println(i);</span><br><span class="line">         flag=<span class="literal">true</span>;</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>案例七：性能测试,不同算法的优化后得到极大的提升</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javaSE_chapter1;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">遍历100000以内的所有的质数,体会不同的算法实现,其性能的差别</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Prime_Number</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">long</span> start=System.currentTimeMillis();<span class="comment">//获取系统当前的时间</span></span><br><span class="line">        <span class="type">int</span> count=<span class="number">0</span>;<span class="comment">//记录质数的个数</span></span><br><span class="line">     <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">100000</span>;i++)</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="comment">//bolean flag=true;</span></span><br><span class="line">         <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">2</span>;j&lt;=Math.sqrt(i);j++)</span><br><span class="line">         &#123;</span><br><span class="line">             <span class="keyword">if</span> (i%j==<span class="number">0</span>)</span><br><span class="line">             &#123;</span><br><span class="line">                flag=<span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;<span class="comment">//针对对非质数有关系</span></span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">if</span> (flag) count++;</span><br><span class="line">         flag=<span class="literal">true</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="type">long</span> end=System.currentTimeMillis();<span class="comment">//获取系统当前的时间</span></span><br><span class="line">        System.out.println(<span class="string">&quot;质数的总个数为:&quot;</span>+count);<span class="comment">//9592个</span></span><br><span class="line">        System.out.println(<span class="string">&quot;花费的时间为:&quot;</span>+(end - start));</span><br><span class="line">        <span class="comment">//[11204mm]----&gt;加上break后[1068mm]----&gt;加上Math.sqrt()函数后[11mm]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Switch-case</title>
      <link href="/2023/09/08/switch-case/"/>
      <url>/2023/09/08/switch-case/</url>
      
        <content type="html"><![CDATA[<h1 id="switch-case"><a href="#switch-case" class="headerlink" title="switch-case"></a>switch-case</h1><ol><li>语法格式<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">case</span> 常量<span class="number">1</span>:</span><br><span class="line">    <span class="comment">//执行语句1</span></span><br><span class="line">    <span class="keyword">case</span> 常量<span class="number">2</span>:</span><br><span class="line">    <span class="comment">//执行语句2</span></span><br><span class="line">    <span class="comment">//break;</span></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">    <span class="comment">//执行语句3</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>执行过程:<br>根据表达式中的值,依次匹配case语句,一旦与某一个case中的常量相等,那么就执行此case中的执行语句,执行完此执行语句之后:</li></ol><ul><li>情况1:遇到break,则执行break后,跳出当前的Switch-case结构</li><li>情况2:没有遇到break,则继续执行其后的case中的执行语句</li></ul><p> 3. </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">案例:编写程序,从键盘上输入2023年 &quot;month&quot; 和 &quot;day&quot;,要求通过程序输出输入的日期为2023年的第几天</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">package</span> javaSE_chapter1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">number_of_days</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Scanner scanner=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第几月:&quot;</span>);</span><br><span class="line">        <span class="type">int</span> month=scanner.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第几天:&quot;</span>);</span><br><span class="line">        <span class="type">int</span> day=scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> sumDays=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">switch</span> (month)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                sumDays +=<span class="number">31</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                sumDays +=<span class="number">30</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">                sumDays +=<span class="number">31</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                sumDays +=<span class="number">31</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                sumDays +=<span class="number">31</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                sumDays +=<span class="number">30</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                sumDays +=<span class="number">31</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                sumDays +=<span class="number">30</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                sumDays +=<span class="number">31</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                sumDays +=<span class="number">28</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                sumDays +=<span class="number">31</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                sumDays +=day;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                sumDays +=day;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;输入有误,月份区间为[1-12],天数区间为[0,31]&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(month+<span class="string">&quot;月&quot;</span>+day+<span class="string">&quot;天&quot;</span>+<span class="string">&quot;是365天中的第&quot;</span>+sumDays+<span class="string">&quot;天&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Scanner类的输入</title>
      <link href="/2023/09/08/Scanner%E8%BE%93%E5%85%A5%E5%87%BD%E6%95%B0%E6%93%8D%E4%BD%9C/"/>
      <url>/2023/09/08/Scanner%E8%BE%93%E5%85%A5%E5%87%BD%E6%95%B0%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="Scanner类"><a href="#Scanner类" class="headerlink" title="Scanner类"></a>Scanner类</h1><ol><li>步骤一:导包</li></ol><ul><li>import java.util.Scanner;</li></ul><ol start="2"><li><p>步骤二:提供或者创建一个Scanner类的实例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">(变量类型 变量名 = 变量值)</span><br></pre></td></tr></table></figure></li><li><p>步骤三:调用Scanner类中的方法,获取指定类型的变量</p></li></ol><ul><li>字符型:String hanson&#x3D;scanner.next();  </li><li>数值型:double height &#x3D; scanner.nextDouble();</li><li>布尔型:boolean hanson &#x3D; scanner.nextBoolean();</li><li>整型:int pretty&#x3D;scanner.nextInt();</li></ul><ol start="4"><li>步骤四:关闭资源,调用scanner类的close()</li></ol><ul><li>scanner.close();</li></ul><p>例题：大家都知道,男大当婚,女大当嫁,那么女方家长要嫁女儿,当然要提出一定的条件,身高:180cm以上,富:财富1千万以上,帅:是<br>1.如果这三个条件同时满足,则:”我一定要嫁给他！！！”<br>2.如果三个条件有为真的情况,则:”嫁吧,比上不足,比下有余。”<br>3.如果三个条件都不满足,则:”不嫁”</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> chapter06;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">yu</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入你的身高(cm):&quot;</span>);</span><br><span class="line">        <span class="type">double</span> <span class="variable">height</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line">        System.out.println(<span class="string">&quot;你的资产多少(千万为单位):&quot;</span>);</span><br><span class="line">        <span class="type">double</span> <span class="variable">property</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line">        <span class="comment">//System.out.println(&quot;你帅吗(是:true\\否:false):&quot;);</span></span><br><span class="line">        <span class="comment">//boolean hanson = scanner.nextBoolean();</span></span><br><span class="line">        System.out.println(<span class="string">&quot;你帅吗(帅/不帅):&quot;</span>);</span><br><span class="line">        String hanson=scanner.next();</span><br><span class="line">        System.out.println(<span class="string">&quot;你的身高是&quot;</span> + height + <span class="string">&quot;，你的资产是&quot;</span> + property + <span class="string">&quot;千万，你很帅：&quot;</span> + hanson);</span><br><span class="line">        <span class="comment">//System.out.println(&quot;请确认你输入的是否属实(是:true\\否:false):&quot;);</span></span><br><span class="line">        <span class="comment">//boolean enter = scanner.nextBoolean();</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请确认你输入的是否属实(是/否):&quot;</span>);</span><br><span class="line">        String enter=scanner.next();</span><br><span class="line">        <span class="keyword">if</span> (enter.equals(<span class="string">&quot;是&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (height &gt; <span class="number">180</span> &amp;&amp; property &gt; <span class="number">1</span> &amp;&amp; hanson.equals(<span class="string">&quot;帅&quot;</span>)) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;我一定要嫁给你!!!&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (height &gt; <span class="number">188</span> || property &gt; <span class="number">1</span> || hanson.equals(<span class="string">&quot;帅&quot;</span>)) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;嫁，比上不足比下有余&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> System.out.println(<span class="string">&quot;不嫁&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> System.out.println(<span class="string">&quot;请重新输入&quot;</span>);</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>流程控制语句</title>
      <link href="/2023/09/07/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/"/>
      <url>/2023/09/07/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="流程控制语句"><a href="#流程控制语句" class="headerlink" title="流程控制语句"></a>流程控制语句</h1><p>概念：是用来控制程序中各<strong>语句执行顺序</strong>的语句,可以把语句组合成能完成一定功能的小逻辑模块</p><p>程序设计中规定的三中流程结构:</p><ul><li><p><strong>顺序结构</strong></p><ul><li>程序从上到下逐行地执行,中间没有任何判断和跳转</li></ul></li><li><p>*<strong>分支结构</strong></p><ul><li>根据条件,选择性地执行某段代码</li><li>有if…else和switch-case两种分支语句</li></ul></li><li><p><strong>循环结构</strong></p><ul><li>根据循环条件,重复性的执行某段代码</li><li>有for while do-while三种循环语句</li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>面试真题</title>
      <link href="/2023/09/07/%E9%9D%A2%E8%AF%95%E7%9C%9F%E9%A2%98/"/>
      <url>/2023/09/07/%E9%9D%A2%E8%AF%95%E7%9C%9F%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="面试真题"><a href="#面试真题" class="headerlink" title="面试真题"></a>面试真题</h1><ol><li><p>高效的方式计算2*8的值<br> 答：2 &lt;&lt; 3  </p></li><li><p>&amp;和&amp;&amp;的区别</p></li></ol><ul><li>答：不同点:当&amp;两边的数值时,左边为假,右边继续执行,当&amp;&amp;两边的数值时,左边为假,右边就不在执行</li><li>答：相同点:都是且的关系,两边都是条件为真的都执行</li></ul><ol start="3"><li>Java中的基本类型有哪些?String时最基本的数据类型吗?</li></ol><ul><li>答：8种基本数据类型,</li><li>算术运算符</li><li>关系运算符</li><li>条件运算符</li><li>逻辑运算符</li><li>赋值运算符</li><li>位运算符</li><li>Lambda运算符<br>  String不是基本数据类型,是引用数据类型</li></ul><ol start="4"><li>Java开发中计算金额时使用什么数据类型?</li></ol><ul><li>答:不能使用Float或者Double,因为精度不高,使用BigDecimal类替换,可以实现任意精度的数据的运算</li></ul><ol start="5"><li>char型变量中能不能存储一个中文汉字,为什么?</li></ol><ul><li>答:可以的,char c1&#x3D;’中’,char c2&#x3D;’a’,因为char使用的是Unicode字符集,包含了世界范围的所有的字符</li></ul><ol start="6"><li>Boolean 占几个字节?</li></ol><ul><li>编译时不谈占几个字节,但是JVM在给boolean类型分配内存空间时,boolean类型的变量占据一个槽位（slot,等于4个字节）<br>  细节:true:1 false:0</li><li><blockquote><p>拓展:在内存中,byte\short\char\boolean\int\float:占用1个slot（一个slot&#x3D;4个字节）<br>  double\long:占用2个slot（2个slot&#x3D;8个字节）</p></blockquote></li></ul><ol start="7"><li>为什么Java中0.1+0.2结果不是0.3?注：在代码中测试0.1+0.2,你会惊讶的发现,结果不是0.3,而是0.3000…..4,这是为什么?</li></ol><ul><li>答:几乎所有现代的编程语言都会遇到上述问题,包括JavaScript,Ruby,Python，Swift和Go,引发这个问题的原因是,它们都采用了<em><strong>IEEE 754</strong></em>标准</li><li><blockquote><p>IEEE是指”电气与电子工程师协会” 根据这个标准,小数的二进制表达能够有最大的精度上限提升,但无论如何,仍然不能实现每一个十进制小数,都对应一个二进制小数,正因如此,产生了0.1+0.2不等于0.3的问题</p></blockquote></li></ul><ol start="8"><li>if分支语句和switch分支语句的异同之处?</li></ol><ul><li>if-else语句优势<ul><li>if语句的条件是一个布尔类型值,if条件表达式为true则进入分支,可以用于范围的判断,也可以用于等值的判断,<strong>使用范围更广</strong></li><li>switch语句的条件是一个常量值(byte,short,int,char,枚举,String),只能判断某个变量或表达式的结果是否等于某个常量值,<strong>使用场景较狭窄</strong></li></ul></li><li>switch语句优势<ul><li>当条件是判断某个变量或者表达式是否等于某个固定的常量值时,使用if和switch都可以,习惯上使用switch更多,因为<strong>效率稍高</strong>,当条件是区间范围的判断时,只能使用if语句</li><li>使用switch可以利用<strong>穿透性</strong>,同时执行多个分支,而if…else没有穿透性</li></ul></li></ul><ol start="9"><li>Java中的内存结构是如何划分的?(主要关心JVM运行时内存环境)</li></ol><ul><li>将内存区域分为5个部分:程序计数器,虚拟机栈,本地方法栈,堆,方法区</li><li><blockquote><p>内存结构:比如int[] arr &#x3D; new int[]{1,2,3};<br>  虚拟机栈:用于存放方法中声明的变量。比如:arr<br>  堆:用于存放数组的实体(即数组中所有的元素)比如:{1,2,3}</p></blockquote></li></ul><ol start="10"><li>举例:具体一维数组的代码的内存解析</li></ol><ul><li><img src="/images/%E6%95%B0%E7%BB%84%E5%86%85%E5%AD%98%E8%A7%A3%E6%9E%90.PNG" alt="Alt text"></li><li><img src="/images/%E6%95%B0%E7%BB%84%E5%86%85%E5%AD%98%E8%A7%A3%E6%9E%901.PNG" alt="Alt text"></li></ul><ol start="11"><li>数组的使用中常见的异常小结</li></ol><ul><li>数组下标越界的异常:ArrayIndexOutOfBoundsException</li><li>空指针的异常:NullPointerException</li></ul><ol start="12"><li>出现异常会怎样?如何处理?</li></ol><ul><li>一旦程序执行中出现了异常,程序就会终止执行</li><li>针对异常提供的信息,修改对应的代码,避免异常再次出现</li></ul><ol start="13"><li>数组有没有length()这个方法?String有没有length()这个方法?</li></ol><ul><li>数组没有length(),是length属性</li><li>string有这个length()方法</li></ul><ol start="14"><li>有数组int[] arr,用java代码将数组元素顺序颠倒?</li></ol><ul><li>使用反转代码  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] arr=<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">78</span>,<span class="number">69</span>,<span class="number">85</span>,<span class="number">58</span>,<span class="number">77</span>,<span class="number">13</span>,<span class="number">5</span>,<span class="number">91</span>,<span class="number">24</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt;arr.length; j++) &#123;</span><br><span class="line">        System.out.print(arr[j]+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;arr.length/<span class="number">2</span>; i++) &#123;</span><br><span class="line">        <span class="type">int</span> temp=arr[i];</span><br><span class="line">        arr[i]=arr[arr.length - <span class="number">1</span> - i];</span><br><span class="line">        arr[arr.length - <span class="number">1</span> - i]=temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt;arr.length; j++) &#123;</span><br><span class="line">        System.out.print(arr[j]+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ol start="15"><li>为什么数组要从0开始编号,而不是1？</li></ol><ul><li>数组的索引,表示了数组元素距离首地址的偏离量,因为第1个元素的地址与首地址相同,所以偏移量就是0,所以从0开始</li></ul><ol start="16"><li>重载:如何判断两个方法是相同的呢?</li></ol><ul><li>方法名相同,且形参列表相同(形参列表相同指的是参数个数和类型都相同,与形参名没关系)</li><li>在一个类中允许存在多个相同名字的方法,只要他们的形参列表不同即可</li></ul><ol start="17"><li>请说出三个运行结果?</li></ol><ul><li><img src="/images/%E9%9D%A2%E8%AF%95.PNG" alt="Alt text"></li></ul><ol start="18"><li>java中的参数传递机制是什么?</li></ol><ul><li>值传递（不是引用传递）</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>运算符</title>
      <link href="/2023/09/07/%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
      <url>/2023/09/07/%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><p>运算符是一种特殊的符号,用以表示数据的运算,赋值和比较等</p><p>运算符的分类:</p><ul><li>按照功能分为:算术运算符,赋值运算符,比较运算符,逻辑运算符,位运算符,条件运算符,Lambda运算符</li><li><img src="/images/%E8%BF%90%E7%AE%97%E7%AC%A61.PNG" alt="Alt text"></li></ul><p>算术运算符:</p><ul><li><img src="/images/%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6.PNG" alt="Alt text"></li></ul><p>赋值运算符:</p><ul><li><img src="/images/%E8%B5%8B%E5%80%BC%E8%BF%90%E7%AE%97%E7%AC%A6.PNG" alt="Alt text"></li></ul><p>比较（关系）运算符:</p><ul><li><img src="/images/%E6%AF%94%E8%BE%83%E8%BF%90%E7%AE%97%E7%AC%A6.PNG" alt="Alt text"></li></ul><p>逻辑运算符:</p><ul><li><img src="/images/%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6.PNG" alt="Alt text"></li></ul><p>位运算符:</p><ul><li><img src="/images/%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6.PNG" alt="Alt text"></li><li><blockquote><p>面试题:如果高效的方式计算2*8？<br> 2 &lt;&lt; 3 或者8 &gt;&gt; 1<br> 解释：2的二进制位 0000 0010,8的二进制位 0000 1000,当2左移3位时,移动的是二进制,变成 0001 0000 ，结果为16，同理8移动一位是一样的</p></blockquote></li></ul><p>条件运算符:</p><ul><li><img src="/images/%E6%9D%A1%E4%BB%B6%E8%BF%90%E7%AE%97%E7%AC%A6.PNG" alt="Alt text"></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>随机数</title>
      <link href="/2023/09/07/%E9%9A%8F%E6%9C%BA%E6%95%B0/"/>
      <url>/2023/09/07/%E9%9A%8F%E6%9C%BA%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="随机数"><a href="#随机数" class="headerlink" title="随机数"></a>随机数</h1><p>如何获取随机数</p><ul><li>可以使用Java提供的API:Math类的random()</li><li>random()调用以后,会返回一个[0.0,1.0)范围的double型的随机数</li></ul><p>需求1:获取一个[0,100]范围的随机整数?</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> num1=(<span class="type">int</span>)(Math.random()*<span class="number">101</span>);</span><br><span class="line"></span><br><span class="line"> 注：[<span class="number">0.0</span>,<span class="number">1.0</span>)--&gt;[<span class="number">1</span>,<span class="number">101</span>)</span><br></pre></td></tr></table></figure><p>需求2:获取一个[1,100]范围的随机整数?</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> num2=(<span class="type">int</span>)(Math.random()*<span class="number">100</span>)+<span class="number">1</span>;</span><br><span class="line">注:[<span class="number">0.0</span>,<span class="number">1.0</span>)--&gt;[<span class="number">1</span>,<span class="number">100</span>]</span><br></pre></td></tr></table></figure><blockquote><p>万能公式:获取一个[a,b]范围的随机整数?<br>int sum&#x3D;(int) (Math.random() * (b-a+1)) + a</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java第一章</title>
      <link href="/2023/09/06/%E5%8F%98%E9%87%8F/"/>
      <url>/2023/09/06/%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><ul><li>变量的概念:<ul><li>内存中的一个存储区域,该区域的数据可以在同一类型范围内不断变化</li><li>变量的构成包含三个要素:数据类型,变量名,存储的值</li><li>Java中变量声明的格式:数据类型 变量名&#x3D;变量值</li></ul></li><li>变量的作用:用于在内存中保存数据</li><li>使用变量注意:<ul><li>Java中每个变量必须先声明,后使用</li><li>变量都有其作用域,变量只在作用域内是有效的,出了作用域就失效了</li><li>在同一个作用域内,不能声明两个同名的变量</li><li>定义好变量以后,就可以通过变量名的方式对变量进行调用和运算</li><li>变量值在赋值时,必须满足变量的数据类型,并且在数据类型有效的范围内变化</li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java第一章</title>
      <link href="/2023/09/06/%E7%AC%AC%E4%B8%80%E7%AB%A0Java/"/>
      <url>/2023/09/06/%E7%AC%AC%E4%B8%80%E7%AB%A0Java/</url>
      
        <content type="html"><![CDATA[<h2 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h2><ul><li>定义：被Java语言赋予了特殊含义，用做专门的字符串</li><li>特点：全部都是<strong>小写字母</strong></li><li>官方地址:  <a href="https://docs.oracle.com/javase/tutorial/java/nutsandbolts/_keywords.html">关键字</a></li></ul><h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><p>Java中变量,方法,类等要素命令时使用的字符序列,称为标识符。  </p><p>技巧:凡是自己可以取名字的地方都叫标识符。  </p><p><strong>标识符命名规则</strong></p><ul><li>由26个英文字母大小写,0-9,_或者$组成</li><li>数字不可以开头</li><li>不可以使用关键字和保留字,但能包含关键字和保留字</li><li>java中严格区分大小写,长度无限制</li><li>标识符不能包含空格</li></ul><p><strong>标识符命令规范</strong></p><ul><li>包名:多单词组成所有字母都小写:xxxyyyzzz    </li><li>类名,接口名:多单词组成时,所有单词的首字母大写:XxxYyy</li><li>变量名,方法名:多单词组成时,第一个字母首字母小写,第二个单词开始每个单词首字母大写:xxxYyyZzz</li><li>常量名:所有字母都大写,多单词时每个单词用下划线连接:XXX_YYY_ZZZ</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java语言概述</title>
      <link href="/2023/09/05/java%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0/"/>
      <url>/2023/09/05/java%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="第一个HelloWorld"><a href="#第一个HelloWorld" class="headerlink" title="第一个HelloWorld"></a>第一个HelloWorld</h2><ul><li><img src="/images/%E6%A6%82%E8%BF%B03.PNG" alt="Alt text">   </li><li><img src="/images/%E6%A6%82%E8%BF%B04.PNG" alt="Alt text"></li><li><img src="/images/%E6%A6%82%E8%BF%B01.PNG" alt="Alt text"></li><li><img src="/images/%E6%A6%82%E8%BF%B02.PNG" alt="Alt text"></li></ul><h2 id="单行注释和多行注释"><a href="#单行注释和多行注释" class="headerlink" title="单行注释和多行注释"></a>单行注释和多行注释</h2><ul><li>单行注释 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//注释文字</span><br></pre></td></tr></table></figure> <img src="/images/%E5%8D%95%E8%A1%8C%E6%B3%A8%E9%87%8A.PNG" alt="Alt text"></li><li>多行注释 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">注释文字1</span><br><span class="line">注释文字2</span><br><span class="line">注释文字3</span><br><span class="line">*/</span><br></pre></td></tr></table></figure> <img src="/images/%E5%A4%9A%E8%A1%8C%E6%B3%A8%E9%87%8A.PNG" alt="Alt text"></li><li>文档注释(注解 Java特有)<br>说明：原有的注释功能里还能加上作者，版本号，电话，邮箱等并且显示出来，一般在代码结尾可以体现，<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">@author jie</span><br><span class="line">@version 1.0</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><img src="/images/%E6%96%87%E6%A1%A3%E6%B3%A8%E9%87%8A.PNG" alt="Alt text"></li></ul><h1 id="java语言优缺点"><a href="#java语言优缺点" class="headerlink" title="java语言优缺点"></a>java语言优缺点</h1><p>优点</p><ol><li><strong>跨平台性</strong>:这是Java的核心优势,Java在最初设计就注重移植和跨平台性，通过Java语言编写的应用程序在不同的系统平台上都可以运行<br>  <img src="/images/%E4%BC%981.PNG" alt="Alt text"></li><li><strong>面向对象性</strong>:面向对象是一种程序设计技术,非常适合大型软件的设计和开发，面向对象编程支持封装,继承,多态等特性</li><li><strong>健壮性</strong>:吸收了C&#x2F;C++语言的优点,但去掉了影响程序健壮性的部分,提供了一个相对安全的内存管理和访问机制</li><li><strong>安全性高</strong>:Java适合于网络&#x2F;分布式环境，需要提供一个安全机制以防恶意代码的攻击</li><li><strong>简单性</strong>:Java就是c++语法的简化版</li><li><strong>高性能</strong>:Java语言本身发展中通过虚拟机的优化提升看十几倍运行效率</li><li>功能：<strong>自动内存管理(内存分配,内存回收)</strong><ul><li>Java程序在运行过程中,涉及到运算的数据的分配,存储都由JVM来完成。</li><li>java消除了程序员回收无用内存空间的职责,提供了一种系统跟踪存储空间的分配情况,在内存空间到达相应阈值时,检查并释放可以释放的内存</li><li>Gc的自动回收，提高了内存空间的利用效率,也提高了编程人员的效率，减少了没有释放空间而导致的内存泄漏</li></ul></li></ol><p>缺点</p><ul><li>语法过于复杂，成本较高</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JDK的选择和下载与安装</title>
      <link href="/2023/09/05/JDK/"/>
      <url>/2023/09/05/JDK/</url>
      
        <content type="html"><![CDATA[<p><strong><a href="#JDK%E7%89%88%E6%9C%AC%E9%80%89%E6%8B%A9">jdk版本选择</a></strong><br><strong><a href="#JDK%E7%9A%84%E4%B8%8B%E8%BD%BD">jdk下载</a></strong><br><strong><a href="#jdk%E7%9A%84%E5%AE%89%E8%A3%85">jdk的安装</a></strong><br><strong><a href="#%E9%85%8D%E7%BD%AEPath%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F">配置path环境变量</a></strong></p><h1 id="JDK的选择和下载"><a href="#JDK的选择和下载" class="headerlink" title="JDK的选择和下载"></a>JDK的选择和下载</h1><blockquote><p>jdk:(J ava D evelopment K it):是Java程序开发工具包，包含<strong>JRE</strong>和开发人员使用的工具。</p></blockquote><blockquote><p>JRE(J ava Runtime E nvironment):是Java程序的运行时环境，包含<strong>JVM</strong>和运行时所需要的<strong>核心类库</strong></p></blockquote><p>JDK和JRE和JVM的关系图  </p><ul><li><img src="/images/%E5%85%B3%E7%B3%BB%E5%9B%BE.PNG" alt="Alt text">  </li><li>JDK  &#x3D;  JRE  +  开发工具集  </li><li>JRE  &#x3D;  JVM  +  Java SE标准类库</li></ul><h2 id="JDK版本选择"><a href="#JDK版本选择" class="headerlink" title="JDK版本选择"></a>JDK版本选择</h2><ul><li><img src="/images/jdk%E9%80%89%E6%8B%A9.PNG" alt="Alt text"> </li><li><img src="/images/jdk%E9%80%89%E6%8B%A92.PNG" alt="Alt text"></li><li><img src="/images/jdk%E9%80%89%E6%8B%A93.PNG" alt="Alt text"></li><li><blockquote><p>自Java发布以来，其后的每次更新，都会有小伙伴高呼：你发任你发，我用Java 8</p></blockquote></li></ul><p>数据</p><ul><li><img src="/images/jdk%E9%80%89%E6%8B%A94.PNG" alt="Alt text"></li></ul><h2 id="JDK的下载"><a href="#JDK的下载" class="headerlink" title="JDK的下载"></a>JDK的下载</h2><ul><li>下载网址（Oracle公司官网）:  <a href="https://www.oracle.com/">www.oracle.com</a></li></ul><ol><li>下载步骤，如图所示,在官网底部选择Developers开发者<br><img src="/images/%E6%AD%A5%E9%AA%A41.PNG" alt="Alt text"> </li><li>在Developers页面中间的技术分类部分，选择Java，单击进入，如图所示：<br><img src="/images/%E6%AD%A5%E9%AA%A42.PNG" alt="Alt text"></li><li>在下方找到download oracle jdk 进行下载，如图所示:<br><img src="/images/%E6%AD%A5%E9%AA%A43.PNG" alt="Alt text"></li><li>点击如图所示的按钮，可选择所需要的版本进行下载，（目前推荐下载兼容的jdk8和jdk17）<br><img src="/images/%E6%AD%A5%E9%AA%A44.PNG" alt="Alt text"><br><img src="/images/%E6%AD%A5%E9%AA%A45.PNG" alt="Alt text"></li></ol><h1 id="jdk的安装"><a href="#jdk的安装" class="headerlink" title="jdk的安装"></a>jdk的安装</h1><ol><li><p>双击打开安装包。<br><img src="/images/%E5%AE%89%E8%A3%851.PNG" alt="Alt text"></p></li><li><p>点击下一步选择安装到文件夹中（路径最好不要有中文符号和汉字）<br><img src="/images/%E5%AE%89%E8%A3%852.PNG" alt="Alt text"></p></li><li><p>安装时如果出现安装JRE，可以选择不安装，因为jdk自带jre<br><img src="/images/%E5%AE%89%E8%A3%853.PNG" alt="Alt text"><br><img src="/images/%E5%AE%89%E8%A3%854.PNG" alt="Alt text"></p></li></ol><h1 id="配置Path环境变量"><a href="#配置Path环境变量" class="headerlink" title="配置Path环境变量"></a>配置Path环境变量</h1><ol><li><p>我的电脑右击属性<br><img src="/images/Path1.PNG" alt="Alt text"></p></li><li><p><img src="/images/Path2.PNG" alt="Alt text"></p></li><li><p><img src="/images/Path3.PNG" alt="Alt text"></p></li><li><p>在系统变量中新建一个变量名为JAVA_HOME，变量值为jdk安装的路径，如图所示<br><img src="/images/Path4.PNG" alt="Alt text"><br><img src="/images/Path5.PNG" alt="Alt text"></p></li><li><p>在找到图中的path变量双击打开或者编辑<br><img src="/images/Path6.PNG" alt="Alt text"></p></li><li><p>在新建一个，内容输入%JAVA_HOME%\bin<br><img src="/images/Path7.PNG" alt="Alt text"></p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>编程语言来源</title>
      <link href="/2023/09/05/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E4%BB%8B%E7%BB%8D/"/>
      <url>/2023/09/05/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机编程语言"><a href="#计算机编程语言" class="headerlink" title="计算机编程语言"></a>计算机编程语言</h1><p><strong>计算机语言是什么</strong></p><ul><li>语言：人与人之间共同的一种方式</li><li>计算机编程语言：就是人与计算机交流的方式，人们可以使用 <strong>编程语言</strong> 对计算机下达<strong>命令</strong>，让计算机完成人们需要的功能</li><li>计算机种类： <code>C C++ Java Go JavaScript Python Scala等</code></li></ul><hr><h1 id="计算机语言简史"><a href="#计算机语言简史" class="headerlink" title="计算机语言简史"></a>计算机语言简史</h1><ul><li><p>第一代：机器语言（相当于人类的石器时代）</p><ul><li><p>1946年2月14日，世界上第一台计算机ENAC诞生，使用的是最原始的穿孔卡片，这种卡片上使用的是用二进制代码表示的语言，与人类语言差别极大，这种语言称为机器语言。</p></li><li><p><img src="/images/%E6%9C%BA%E5%99%A8%E8%AF%AD%E8%A8%80.PNG" alt="Alt text"></p></li></ul></li><li><p>第二代：汇编语言（相当于人类的青铜&amp;铁器时代）</p><ul><li><p>使用英文缩写的<strong>助记符</strong>来表示基本的操作，这些助记符构成了汇编语言的基础，比如：Load，Move等，因此，汇编语言也称为符号语言。</p></li><li><p>优点：能编写<strong>高效率</strong>的程序</p></li><li><p>缺点：汇编语言是面向机器的，不同计算机机型特点不同，因此会有不同的汇编语言，彼此之前<strong>不能通用</strong>，程序不易移植，较难调试</p></li></ul></li><li><p>第三代：高级语言（相当于人类的信息时代）</p><ul><li><p>高级语言发展于20世纪50年代中叶到70年代，是一种<strong>接近于人们使用习惯</strong>的程序设计语言，它允许程序员使用<strong>接近日常英语</strong>的指令来编写程序，程序中的符号和算式也与<strong>日常用的数学式子</strong>差不多，接近于自然语言和数学语言，容易为人们掌握。<br>  <img src="/images/%E9%AB%98%E7%BA%A7%E8%AF%AD%E8%A8%80.PNG" alt="Alt text"></p></li><li><p>高级语言<strong>独立于机器</strong>，有一定的通用性，计算机不能直接识别和执行用高级语言编写的程序，需要使用编译器或者解释器，转换为<strong>机器语言</strong>才能被识别和执行<br>  <img src="/images/%E9%AB%98%E7%BA%A7%E8%AF%AD%E8%A8%802.PNG" alt="Alt text"><br>  <img src="/images/%E9%AB%98%E7%BA%A7%E8%AF%AD%E8%A8%803.PNG" alt="Alt text"></p></li></ul></li><li><p>此外，高级语言按照程序设计方法的不同，可分为：<strong>面向过程的语言</strong>和<strong>面向对象的语言</strong></p><ul><li>C，Pascal,Fortran面向过程的语言</li><li>C++面向过程&#x2F;面向对象</li><li>Java跨平台的纯面向对象的语言</li><li>C#,Python,JavaScript</li></ul></li></ul><blockquote><p>目前,计算机语言仍然处于第三代高级语言阶段,但是不管是什么语言,最后都要向机器语言靠近，因为CPU只认识0和1</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>软件</title>
      <link href="/2023/09/05/%E8%BD%AF%E4%BB%B6/"/>
      <url>/2023/09/05/%E8%BD%AF%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>什么是软件</p><blockquote><p>软件,即一系列按照特定顺序组织的计算机数据和指令的集合，有系统软件和应用软件之分</p></blockquote><p>系统软件</p><ul><li><img src="/images/%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6.PNG" alt="Alt text"></li></ul><p>应用软件</p><ul><li><img src="/images/%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6.PNG" alt="Alt text"></li></ul><p>人机交互方式</p><ol><li>图形化界面（GUI）</li><li>命令行方式（CLI）</li></ol><p>常见DOS命令</p><ol><li><img src="/images/DOS.PNG" alt="Alt text"></li><li><img src="/images/DOS2.PNG" alt="Alt text"></li><li><img src="/images/DOS3.PNG" alt="Alt text"></li><li><img src="/images/DOS4.PNG" alt="Alt text"></li><li><img src="/images/DOS5.PNG" alt="Alt text"></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>计算机软件与硬件</title>
      <link href="/2023/09/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%BD%AF%E4%BB%B6%E4%B8%8E%E7%A1%AC%E4%BB%B6/"/>
      <url>/2023/09/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%BD%AF%E4%BB%B6%E4%B8%8E%E7%A1%AC%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="计算机软件与硬件"><a href="#计算机软件与硬件" class="headerlink" title="计算机软件与硬件"></a>计算机软件与硬件</h3><p>计算机硬件:</p><ol><li>CPU</li></ol><ul><li>中央处理器</li></ul><ol start="2"><li>内存</li></ol><ul><li><img src="/images/%E5%86%85%E5%AD%98.PNG" alt="Alt text"></li></ul><ol start="3"><li>硬盘</li></ol><ul><li>固态硬盘(SSD)</li><li>机械硬盘(HDD)</li><li>混合硬盘(SSHD)</li></ul><ol start="4"><li>存储设备</li></ol><ul><li>磁盘</li><li>光盘</li><li>磁带</li></ul><ol start="5"><li>输入设备</li></ol><ul><li>键盘</li><li>鼠标</li></ul><ol start="6"><li>输出设备</li></ol><ul><li>显示器</li><li>打印机</li></ul><ol start="7"><li>通信设备</li></ol><ul><li>调制解调器</li><li>网卡</li></ul><p>计算机软件:</p><ol><li>系统软件</li><li>应用软件–jdk</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客文章</title>
      <link href="/2022/11/09/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/"/>
      <url>/2022/11/09/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="学生管理系统"><a href="#学生管理系统" class="headerlink" title="学生管理系统"></a>学生管理系统</h3><table><thead><tr><th align="left">班级</th><th align="right">姓名</th><th align="center">性别</th><th align="center">成绩</th></tr></thead><tbody><tr><td align="left">1班</td><td align="right">张三</td><td align="center">男</td><td align="center">99</td></tr><tr><td align="left">2班</td><td align="right">李四</td><td align="center">女</td><td align="center">100</td></tr><tr><td align="left">3班</td><td align="right">王二</td><td align="center">男</td><td align="center">98</td></tr></tbody></table><blockquote><p>李四成绩大于张三，所以李四的成绩最好</p></blockquote><p>李四学习计划:</p><ol><li>早起</li><li>自律</li><li>早睡</li></ol><p>张三学习计划：</p><ul><li>早起</li><li>自律</li><li>晚睡</li></ul><p>明天要做的事:</p><ul><li>[ ]吃饭</li><li>[x]打豆豆</li><li>[ ]睡觉</li></ul><p>代码块：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">( )</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> x；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">( )</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">               &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/11/09/hello-world/"/>
      <url>/2022/11/09/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>电影</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>title</title>
      <link href="/title/index.html"/>
      <url>/title/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
